//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GlobalBank.AppraiserWorkbench.WebServiceProxies.AppraisalService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AppraisalManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AppraisalManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAppraisalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseAppraisalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AppraisalManagementService() {
            this.Url = "http://localhost:1428/AppraisalService/AppraisalManagementService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAppraisalsCompletedEventHandler GetAppraisalsCompleted;
        
        /// <remarks/>
        public event LockAppraisalCompletedEventHandler LockAppraisalCompleted;
        
        /// <remarks/>
        public event ReleaseAppraisalCompletedEventHandler ReleaseAppraisalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppraisals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Appraisal[] GetAppraisals(string userId, AppraisalFilter filter) {
            object[] results = this.Invoke("GetAppraisals", new object[] {
                        userId,
                        filter});
            return ((Appraisal[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAppraisalsAsync(string userId, AppraisalFilter filter) {
            this.GetAppraisalsAsync(userId, filter, null);
        }
        
        /// <remarks/>
        public void GetAppraisalsAsync(string userId, AppraisalFilter filter, object userState) {
            if ((this.GetAppraisalsOperationCompleted == null)) {
                this.GetAppraisalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppraisalsOperationCompleted);
            }
            this.InvokeAsync("GetAppraisals", new object[] {
                        userId,
                        filter}, this.GetAppraisalsOperationCompleted, userState);
        }
        
        private void OnGetAppraisalsOperationCompleted(object arg) {
            if ((this.GetAppraisalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppraisalsCompleted(this, new GetAppraisalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LockAppraisal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LockAppraisal(string userId, string appraisalId) {
            object[] results = this.Invoke("LockAppraisal", new object[] {
                        userId,
                        appraisalId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LockAppraisalAsync(string userId, string appraisalId) {
            this.LockAppraisalAsync(userId, appraisalId, null);
        }
        
        /// <remarks/>
        public void LockAppraisalAsync(string userId, string appraisalId, object userState) {
            if ((this.LockAppraisalOperationCompleted == null)) {
                this.LockAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockAppraisalOperationCompleted);
            }
            this.InvokeAsync("LockAppraisal", new object[] {
                        userId,
                        appraisalId}, this.LockAppraisalOperationCompleted, userState);
        }
        
        private void OnLockAppraisalOperationCompleted(object arg) {
            if ((this.LockAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockAppraisalCompleted(this, new LockAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseAppraisal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseAppraisal(string userId, string appraisalId) {
            this.Invoke("ReleaseAppraisal", new object[] {
                        userId,
                        appraisalId});
        }
        
        /// <remarks/>
        public void ReleaseAppraisalAsync(string userId, string appraisalId) {
            this.ReleaseAppraisalAsync(userId, appraisalId, null);
        }
        
        /// <remarks/>
        public void ReleaseAppraisalAsync(string userId, string appraisalId, object userState) {
            if ((this.ReleaseAppraisalOperationCompleted == null)) {
                this.ReleaseAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseAppraisalOperationCompleted);
            }
            this.InvokeAsync("ReleaseAppraisal", new object[] {
                        userId,
                        appraisalId}, this.ReleaseAppraisalOperationCompleted, userState);
        }
        
        private void OnReleaseAppraisalOperationCompleted(object arg) {
            if ((this.ReleaseAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseAppraisalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum AppraisalFilter {
        
        /// <remarks/>
        MyAppraisals,
        
        /// <remarks/>
        Unassigned,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Appraisal {
        
        private string idField;
        
        private string descriptionField;
        
        private System.DateTime dateToCompleteField;
        
        private Address propertyAddressField;
        
        private PropertyType propertyTypeField;
        
        private string assignedToField;
        
        private string notesField;
        
        private AttachmentMetadata[] attachmentsField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateToComplete {
            get {
                return this.dateToCompleteField;
            }
            set {
                this.dateToCompleteField = value;
            }
        }
        
        /// <remarks/>
        public Address PropertyAddress {
            get {
                return this.propertyAddressField;
            }
            set {
                this.propertyAddressField = value;
            }
        }
        
        /// <remarks/>
        public PropertyType PropertyType {
            get {
                return this.propertyTypeField;
            }
            set {
                this.propertyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AssignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public AttachmentMetadata[] Attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Address {
        
        private string street1Field;
        
        private string street2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        /// <remarks/>
        public string Street1 {
            get {
                return this.street1Field;
            }
            set {
                this.street1Field = value;
            }
        }
        
        /// <remarks/>
        public string Street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AttachmentMetadata {
        
        private string fileNameField;
        
        private string urlField;
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PropertyType {
        
        /// <remarks/>
        ResidentialSingleFamily,
        
        /// <remarks/>
        ResidentialCondoOrTownhouse,
        
        /// <remarks/>
        ResidentialMultiFamily,
        
        /// <remarks/>
        ResidentialMobileHome,
        
        /// <remarks/>
        ResidentialLand,
        
        /// <remarks/>
        CommercialIndustrial,
        
        /// <remarks/>
        CommercialLand,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAppraisalsCompletedEventHandler(object sender, GetAppraisalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppraisalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppraisalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Appraisal[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Appraisal[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void LockAppraisalCompletedEventHandler(object sender, LockAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ReleaseAppraisalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591