//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by this guidance package as part of the solution template
//
// The WorkItemController is an abstract base class that contains a WorkItem. 
// This class contains logic that would otherwise exist in the WorkItem. 
// You can use this class to partition your code between a class that derives from WorkItemController and a WorkItem.
// 
// For more information see: 
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-210-Creating%20a%20Smart%20Client%20Solution.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System.Windows.Forms;
using Microsoft.Practices.CompositeUI;
using $RootNamespace$.Infrastructure.Interface.Services;

namespace $RootNamespace$.Infrastructure.Interface
{
	/// <summary>
	/// Base class for a WorkItem controller.
	/// </summary>
	public abstract class WorkItemController : IWorkItemController
	{
        private WorkItem _workItem;

		/// <summary>
		/// Gets or sets the work item.
		/// </summary>
		/// <value>The work item.</value>
		[ServiceDependency]
		public WorkItem WorkItem
		{
			get { return _workItem; }
			set { _workItem = value; }
		}
        
        public IActionCatalogService ActionCatalogService
        {
            get { return _workItem.Services.Get<IActionCatalogService>(); }            
        }	

		public virtual void Run()
		{
		}
	}
}
